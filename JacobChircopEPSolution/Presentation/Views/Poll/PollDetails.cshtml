@model Domain.Models.Poll

@{
    ViewData["Title"] = "Poll Details";
}

<h1>Poll Details</h1>

@if (TempData["AlreadyVoted"] != null)
{
    <div class="alert alert-warning" role="alert">
        @TempData["AlreadyVoted"]
    </div>
}

<div class="card">
    <div class="card-header">
        <h4>@Html.DisplayFor(model => model.Title)</h4>
    </div>
    <div class="card-body">
        <dl class="row">
            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.Option1Text)
            </dt>
            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.Option1Text)
                <form asp-action="Vote" asp-route-pollId="@Model.Id" method="post" class="d-inline">
                    <input type="hidden" name="optionNumber" value="1" />
                    <button type="submit" class="btn btn-sm btn-warning ms-2">Vote</button>
                </form>
            </dd>

            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.Option2Text)
            </dt>
            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.Option2Text)
                <form asp-action="Vote" asp-route-pollId="@Model.Id" method="post" class="d-inline">
                    <input type="hidden" name="optionNumber" value="2" />
                    <button type="submit" class="btn btn-sm btn-warning ms-2">Vote</button>
                </form>
            </dd>

            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.Option3Text)
            </dt>
            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.Option3Text)
                <form asp-action="Vote" asp-route-pollId="@Model.Id" method="post" class="d-inline">
                    <input type="hidden" name="optionNumber" value="3" />
                    <button type="submit" class="btn btn-sm btn-warning ms-2">Vote</button>
                </form>
            </dd>

            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.DateCreated)
            </dt>
            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.DateCreated)
            </dd>
        </dl>
    </div>
</div>

<div class="mt-4">
    <h4>Poll Results</h4>
    <canvas id="pollResultsChart" width="400" height="200"></canvas>
    <hr />
</div>

<div>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const ctx = document.getElementById('pollResultsChart').getContext('2d');

    const chart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: [
                '@Model.Option1Text',
                '@Model.Option2Text',
                '@Model.Option3Text'
            ],
            datasets: [{
                label: 'Votes',
                data: [
    @Model.Option1VotesCount,
    @Model.Option2VotesCount,
    @Model.Option3VotesCount
                    ],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.5)',
                    'rgba(54, 162, 235, 0.5)',
                    'rgba(255, 206, 86, 0.5)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            scales: {
                y: {
                    beginAtZero: true,
                    stepSize: 1
                }
            }
        }
    });
</script>